{"ast":null,"code":"var _jsxFileName = \"/Users/muskansingla/Desktop/Qoala/client/src/components/FileUpload.js\",\n  _s = $RefreshSig$();\n// client/src/components/FileUpload.js\nimport React, { useState, useRef } from 'react';\nimport './FileUpload.css';\nimport axios from 'axios';\nimport uploadImage from './upload.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileUpload = ({\n  onUpload\n}) => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [uploadStatus, setUploadStatus] = useState(null);\n  const hiddenFileInput = useRef(null);\n  const [insertedRecord, setInsertedRecord] = useState(null);\n  const handleFileChange = e => {\n    const selectedFile = e.target.files[0];\n    setFile(selectedFile);\n  };\n  const handleClick = event => {\n    hiddenFileInput.current.click();\n  };\n  const handleUpload = async () => {\n    if (file) {\n      // Read the file and encode it to base64\n      const reader = new FileReader();\n      reader.onload = async () => {\n        const base64Data = reader.result.split(',')[1];\n        console.log(base64Data);\n        // Call the Google Cloud Vision API for OCR\n        const apiKey = 'AIzaSyAZ-gIQVHvgeiXl8J9q1rGfd3dzRWtNSk4'; //'AIzaSyDomoRZT6ZWL6Z7-TOxf7hBPCqznRQOYUI';\n        const apiUrl = 'https://vision.googleapis.com/v1/images:annotate?key=' + apiKey;\n        const requestBody = {\n          requests: [{\n            image: {\n              content: base64Data\n            },\n            features: [{\n              type: 'DOCUMENT_TEXT_DETECTION'\n            }],\n            imageContext: {\n              languageHints: ['en', 'th']\n            }\n          }]\n        };\n        try {\n          var _result$responses$, _result$responses$$fu;\n          const response = await fetch(apiUrl, {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(requestBody)\n          });\n          const result = await response.json();\n          console.log('OCR Result:', result);\n\n          // Extract OCR text from the result and call the onUpload function\n          const ocrText = ((_result$responses$ = result.responses[0]) === null || _result$responses$ === void 0 ? void 0 : (_result$responses$$fu = _result$responses$.fullTextAnnotation) === null || _result$responses$$fu === void 0 ? void 0 : _result$responses$$fu.text) || '';\n          try {\n            const axiosResponse = await axios.post('http://localhost:5000/data', {\n              ocrText\n            });\n            console.log('OCR Text sent to server successfully');\n            //setUploadStatus('Record has been successfully added');\n            setInsertedRecord(axiosResponse.data);\n            setFile(null);\n            onUpload(ocrText);\n          } catch (error) {\n            console.error('Error sending OCR text to server:', error);\n            //setUploadStatus('Record could not be added');\n            setInsertedRecord(null);\n            setFile(null);\n          }\n        } catch (error) {\n          console.error('Error performing OCR with Google Cloud Vision API:', error);\n          //setUploadStatus('Record could not be added');\n          setInsertedRecord(null);\n          setFile(null);\n        }\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"upload-container\",\n    children: [file ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"uploaded-file\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Selected File:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: file.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-btn-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Upload Your ID Card\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: handleClick,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"image\",\n          src: uploadImage,\n          alt: \"Upload a file\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \".png, .jpg, .pdf\",\n      onChange: handleFileChange,\n      className: \"file-input\",\n      ref: hiddenFileInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-btn-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: handleUpload,\n        children: file ? 'Submit' : 'Upload'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), uploadStatus && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: uploadStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 24\n    }, this), insertedRecord && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Inserted Record:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: ['{', /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 15\n        }, this), '    identification_number: ' + insertedRecord.identification_number + ',', /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 15\n        }, this), '    name: ' + insertedRecord.name + ',', /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 15\n        }, this), '    last_name: ' + insertedRecord.last_name + ',', /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 15\n        }, this), '    date_of_birth: ' + insertedRecord.date_of_birth + ',', /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 15\n        }, this), '    date_of_issue: ' + insertedRecord.date_of_issue + ',', /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 15\n        }, this), '    date_of_expiry: ' + insertedRecord.date_of_expiry + ',', /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 15\n        }, this), '    status: ' + insertedRecord.status, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 15\n        }, this), '}']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n_s(FileUpload, \"wBT0M70zblitY6PXv9for0ta2mk=\");\n_c = FileUpload;\nexport default FileUpload;\nvar _c;\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"names":["React","useState","useRef","axios","uploadImage","jsxDEV","_jsxDEV","FileUpload","onUpload","_s","file","setFile","uploadStatus","setUploadStatus","hiddenFileInput","insertedRecord","setInsertedRecord","handleFileChange","e","selectedFile","target","files","handleClick","event","current","click","handleUpload","reader","FileReader","onload","base64Data","result","split","console","log","apiKey","apiUrl","requestBody","requests","image","content","features","type","imageContext","languageHints","_result$responses$","_result$responses$$fu","response","fetch","method","headers","body","JSON","stringify","json","ocrText","responses","fullTextAnnotation","text","axiosResponse","post","data","error","readAsDataURL","className","children","fileName","_jsxFileName","lineNumber","columnNumber","name","onClick","src","alt","accept","onChange","ref","identification_number","last_name","date_of_birth","date_of_issue","date_of_expiry","status","_c","$RefreshReg$"],"sources":["/Users/muskansingla/Desktop/Qoala/client/src/components/FileUpload.js"],"sourcesContent":["// client/src/components/FileUpload.js\nimport React, { useState,useRef } from 'react';\nimport './FileUpload.css';\nimport axios from 'axios';\nimport uploadImage from './upload.png';\n\nconst FileUpload = ({ onUpload }) => {\n  \n  const [file, setFile] = useState(null);\n  const [uploadStatus, setUploadStatus] = useState(null);\n  const hiddenFileInput = useRef(null);\n  const [insertedRecord, setInsertedRecord] = useState(null);\n  \n\n  const handleFileChange = (e) => {\n    const selectedFile = e.target.files[0];\n    setFile(selectedFile);\n  };\n\n  const handleClick = event => {\n    hiddenFileInput.current.click();\n  };\n\n  const handleUpload = async () => {\n    if (file) {\n      // Read the file and encode it to base64\n      const reader = new FileReader();\n      reader.onload = async () => {\n        const base64Data = reader.result.split(',')[1];\n        console.log(base64Data);\n        // Call the Google Cloud Vision API for OCR\n        const apiKey = 'AIzaSyAZ-gIQVHvgeiXl8J9q1rGfd3dzRWtNSk4';//'AIzaSyDomoRZT6ZWL6Z7-TOxf7hBPCqznRQOYUI';\n        const apiUrl = 'https://vision.googleapis.com/v1/images:annotate?key=' + apiKey;\n\n        const requestBody = {\n          requests: [\n            {\n              image: {\n                content: base64Data,\n              },\n              features: [\n                {\n                  type: 'DOCUMENT_TEXT_DETECTION',\n                },\n              ],\n              imageContext: {\n                languageHints: ['en', 'th'],\n              },\n            },\n          ],\n        };\n\n        try {\n          const response = await fetch(apiUrl, {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(requestBody),\n          });\n\n          const result = await response.json();\n          console.log('OCR Result:', result);\n\n          // Extract OCR text from the result and call the onUpload function\n          const ocrText = result.responses[0]?.fullTextAnnotation?.text || '';\n          \n          try {\n            const axiosResponse = await axios.post('http://localhost:5000/data', { ocrText });\n            console.log('OCR Text sent to server successfully');\n            //setUploadStatus('Record has been successfully added');\n            setInsertedRecord(axiosResponse.data);\n            setFile(null);\n            onUpload(ocrText)\n          } catch (error) {\n            console.error('Error sending OCR text to server:', error);\n            //setUploadStatus('Record could not be added');\n            setInsertedRecord(null);\n            setFile(null);\n          }\n\n        } catch (error) {\n          console.error('Error performing OCR with Google Cloud Vision API:', error);\n          //setUploadStatus('Record could not be added');\n          setInsertedRecord(null);\n          setFile(null);\n        }\n      };\n\n      reader.readAsDataURL(file);\n    }\n  };\n\n\n  return (\n    <div className=\"upload-container\">\n      {file ? (\n        <div className=\"uploaded-file\">\n          <h3>Selected File:</h3>\n          <p>{file.name}</p>\n        </div>\n      ) : (\n        <div className=\"upload-btn-wrapper\">\n          <h3>Upload Your ID Card</h3>\n          <button className=\"btn\" onClick={handleClick}>\n            <img className=\"image\" src={uploadImage} alt=\"Upload a file\" />\n          </button>\n        </div>\n      )}\n\n      <input type=\"file\" accept=\".png, .jpg, .pdf\" onChange={handleFileChange} className=\"file-input\" ref={hiddenFileInput} />\n      \n      <div className=\"upload-btn-wrapper\">\n        <button className=\"btn\" onClick={handleUpload}>\n          {file ? 'Submit' : 'Upload'}\n        </button>\n      </div>\n      \n      {uploadStatus && <p>{uploadStatus}</p>}\n      {insertedRecord && (\n        <div>\n          <p>Inserted Record:</p>\n          <pre>\n              {'{'}\n              <br />\n              {'    identification_number: ' + insertedRecord.identification_number + ','}\n              <br />\n              <br />\n              {'    name: ' + insertedRecord.name + ','}\n              <br />\n              <br />\n              {'    last_name: ' + insertedRecord.last_name + ','}\n              <br />\n              <br />\n              {'    date_of_birth: ' + insertedRecord.date_of_birth + ','}\n              <br />\n              <br />\n              {'    date_of_issue: ' + insertedRecord.date_of_issue + ','}\n              <br />\n              <br />\n              {'    date_of_expiry: ' + insertedRecord.date_of_expiry + ','}\n              <br />\n              <br />\n              {'    status: ' + insertedRecord.status}\n              <br />\n              {'}'}\n            </pre>\n        </div>\n      )}\n    </div>\n  );\n};\n\n\nexport default FileUpload;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}