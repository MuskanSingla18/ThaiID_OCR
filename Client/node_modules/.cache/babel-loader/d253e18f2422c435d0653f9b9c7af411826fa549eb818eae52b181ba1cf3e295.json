{"ast":null,"code":"var _jsxFileName = \"/Users/muskansingla/Desktop/Qoala/client/src/components/FileUpload.js\",\n  _s = $RefreshSig$();\n// client/src/components/FileUpload.js\nimport React, { useState, useRef } from 'react';\nimport './FileUpload.css';\nimport axios from 'axios';\nimport uploadImage from './upload.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileUpload = ({\n  onUpload\n}) => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [uploadStatus, setUploadStatus] = useState(null);\n  const [imagePreview, setImagePreview] = useState(null);\n  const hiddenFileInput = useRef(null);\n  const handleFileChange = e => {\n    const selectedFile = e.target.files[0];\n    setFile(selectedFile);\n\n    // Display image preview\n    const reader = new FileReader();\n    reader.onloadend = () => {\n      setImagePreview(reader.result);\n    };\n    reader.readAsDataURL(selectedFile);\n  };\n  const handleClick = event => {\n    hiddenFileInput.current.click();\n  };\n  const handleUpload = async () => {\n    if (file) {\n      // Read the file and encode it to base64\n      const reader = new FileReader();\n      reader.onload = async () => {\n        const base64Data = reader.result.split(',')[1];\n        console.log(base64Data);\n        // Call the Google Cloud Vision API for OCR\n        const apiKey = 'AIzaSyAZ-gIQVHvgeiXl8J9q1rGfd3dzRWtNSk4'; //'AIzaSyDomoRZT6ZWL6Z7-TOxf7hBPCqznRQOYUI';\n        const apiUrl = 'https://vision.googleapis.com/v1/images:annotate?key=' + apiKey;\n        const requestBody = {\n          requests: [{\n            image: {\n              content: base64Data\n            },\n            features: [{\n              type: 'DOCUMENT_TEXT_DETECTION'\n            }],\n            imageContext: {\n              languageHints: ['en', 'th']\n            }\n          }]\n        };\n        try {\n          var _result$responses$, _result$responses$$fu;\n          const response = await fetch(apiUrl, {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(requestBody)\n          });\n          const result = await response.json();\n          console.log('OCR Result:', result);\n\n          // Extract OCR text from the result and call the onUpload function\n          const ocrText = ((_result$responses$ = result.responses[0]) === null || _result$responses$ === void 0 ? void 0 : (_result$responses$$fu = _result$responses$.fullTextAnnotation) === null || _result$responses$$fu === void 0 ? void 0 : _result$responses$$fu.text) || '';\n          try {\n            await axios.post('http://localhost:5000/data', {\n              ocrText\n            });\n            console.log('OCR Text sent to server successfully');\n            setUploadStatus('Record has been successfully added');\n            onUpload(ocrText);\n          } catch (error) {\n            console.error('Error sending OCR text to server:', error);\n            setUploadStatus('Record could not be added');\n          }\n        } catch (error) {\n          console.error('Error performing OCR with Google Cloud Vision API:', error);\n          setUploadStatus('Record could not be added');\n        }\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"upload-container\",\n    children: [imagePreview ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-preview\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: imagePreview,\n        alt: \"Selected File Preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-btn-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Upload Your ID Card\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: handleClick,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"image\",\n          src: uploadImage,\n          alt: \"Upload a file\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \".png, .jpg, .pdf\",\n      onChange: handleFileChange,\n      className: \"file-input\",\n      ref: hiddenFileInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-btn-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: handleUpload,\n        children: file ? 'Submit' : 'Upload'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), uploadStatus && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: uploadStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n_s(FileUpload, \"aUZb3Bo9TBssMeB44jSaEY3Vyw4=\");\n_c = FileUpload;\nexport default FileUpload;\nvar _c;\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"names":["React","useState","useRef","axios","uploadImage","jsxDEV","_jsxDEV","FileUpload","onUpload","_s","file","setFile","uploadStatus","setUploadStatus","imagePreview","setImagePreview","hiddenFileInput","handleFileChange","e","selectedFile","target","files","reader","FileReader","onloadend","result","readAsDataURL","handleClick","event","current","click","handleUpload","onload","base64Data","split","console","log","apiKey","apiUrl","requestBody","requests","image","content","features","type","imageContext","languageHints","_result$responses$","_result$responses$$fu","response","fetch","method","headers","body","JSON","stringify","json","ocrText","responses","fullTextAnnotation","text","post","error","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","accept","onChange","ref","_c","$RefreshReg$"],"sources":["/Users/muskansingla/Desktop/Qoala/client/src/components/FileUpload.js"],"sourcesContent":["// client/src/components/FileUpload.js\nimport React, { useState,useRef } from 'react';\nimport './FileUpload.css';\nimport axios from 'axios';\nimport uploadImage from './upload.png';\n\nconst FileUpload = ({ onUpload }) => {\n  \n  const [file, setFile] = useState(null);\n  const [uploadStatus, setUploadStatus] = useState(null);\n  const [imagePreview, setImagePreview] = useState(null);\n  const hiddenFileInput = useRef(null);\n\n  const handleFileChange = (e) => {\n    const selectedFile = e.target.files[0];\n    setFile(selectedFile);\n\n    // Display image preview\n    const reader = new FileReader();\n    reader.onloadend = () => {\n      setImagePreview(reader.result);\n    };\n    reader.readAsDataURL(selectedFile);\n  };\n\n  const handleClick = event => {\n    hiddenFileInput.current.click();\n  };\n\n  const handleUpload = async () => {\n    if (file) {\n      // Read the file and encode it to base64\n      const reader = new FileReader();\n      reader.onload = async () => {\n        const base64Data = reader.result.split(',')[1];\n        console.log(base64Data);\n        // Call the Google Cloud Vision API for OCR\n        const apiKey = 'AIzaSyAZ-gIQVHvgeiXl8J9q1rGfd3dzRWtNSk4';//'AIzaSyDomoRZT6ZWL6Z7-TOxf7hBPCqznRQOYUI';\n        const apiUrl = 'https://vision.googleapis.com/v1/images:annotate?key=' + apiKey;\n\n        const requestBody = {\n          requests: [\n            {\n              image: {\n                content: base64Data,\n              },\n              features: [\n                {\n                  type: 'DOCUMENT_TEXT_DETECTION',\n                },\n              ],\n              imageContext: {\n                languageHints: ['en', 'th'],\n              },\n            },\n          ],\n        };\n\n        try {\n          const response = await fetch(apiUrl, {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(requestBody),\n          });\n\n          const result = await response.json();\n          console.log('OCR Result:', result);\n\n          // Extract OCR text from the result and call the onUpload function\n          const ocrText = result.responses[0]?.fullTextAnnotation?.text || '';\n          \n          try {\n            await axios.post('http://localhost:5000/data', { ocrText });\n            console.log('OCR Text sent to server successfully');\n            setUploadStatus('Record has been successfully added');\n            onUpload(ocrText)\n          } catch (error) {\n            console.error('Error sending OCR text to server:', error);\n            setUploadStatus('Record could not be added');\n          }\n\n        } catch (error) {\n          console.error('Error performing OCR with Google Cloud Vision API:', error);\n          setUploadStatus('Record could not be added');\n        }\n      };\n\n      reader.readAsDataURL(file);\n    }\n  };\n\n\n  return (\n    <div className=\"upload-container\">\n      {imagePreview ? (\n        <div className=\"image-preview\">\n          <img src={imagePreview} alt=\"Selected File Preview\" />\n        </div>\n      ) : (\n        <div className=\"upload-btn-wrapper\">\n          <h3>Upload Your ID Card</h3>\n          <button className=\"btn\" onClick={handleClick}>\n            <img className=\"image\" src={uploadImage} alt=\"Upload a file\" />\n          </button>\n        </div>\n      )}\n\n      <input type=\"file\" accept=\".png, .jpg, .pdf\" onChange={handleFileChange} className=\"file-input\" ref={hiddenFileInput} />\n\n      <div className=\"upload-btn-wrapper\">\n        <button className=\"btn\" onClick={handleUpload}>\n          {file ? 'Submit' : 'Upload'}\n        </button>\n      </div>\n\n      {uploadStatus && <p>{uploadStatus}</p>}\n    </div>\n  );\n};\n\n\nexport default FileUpload;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAACC,MAAM,QAAQ,OAAO;AAC9C,OAAO,kBAAkB;AACzB,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,UAAU,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAEnC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACW,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACa,YAAY,EAAEC,eAAe,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAMe,eAAe,GAAGd,MAAM,CAAC,IAAI,CAAC;EAEpC,MAAMe,gBAAgB,GAAIC,CAAC,IAAK;IAC9B,MAAMC,YAAY,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IACtCV,OAAO,CAACQ,YAAY,CAAC;;IAErB;IACA,MAAMG,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;IAC/BD,MAAM,CAACE,SAAS,GAAG,MAAM;MACvBT,eAAe,CAACO,MAAM,CAACG,MAAM,CAAC;IAChC,CAAC;IACDH,MAAM,CAACI,aAAa,CAACP,YAAY,CAAC;EACpC,CAAC;EAED,MAAMQ,WAAW,GAAGC,KAAK,IAAI;IAC3BZ,eAAe,CAACa,OAAO,CAACC,KAAK,CAAC,CAAC;EACjC,CAAC;EAED,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAIrB,IAAI,EAAE;MACR;MACA,MAAMY,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;MAC/BD,MAAM,CAACU,MAAM,GAAG,YAAY;QAC1B,MAAMC,UAAU,GAAGX,MAAM,CAACG,MAAM,CAACS,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QAC9CC,OAAO,CAACC,GAAG,CAACH,UAAU,CAAC;QACvB;QACA,MAAMI,MAAM,GAAG,yCAAyC,CAAC;QACzD,MAAMC,MAAM,GAAG,uDAAuD,GAAGD,MAAM;QAE/E,MAAME,WAAW,GAAG;UAClBC,QAAQ,EAAE,CACR;YACEC,KAAK,EAAE;cACLC,OAAO,EAAET;YACX,CAAC;YACDU,QAAQ,EAAE,CACR;cACEC,IAAI,EAAE;YACR,CAAC,CACF;YACDC,YAAY,EAAE;cACZC,aAAa,EAAE,CAAC,IAAI,EAAE,IAAI;YAC5B;UACF,CAAC;QAEL,CAAC;QAED,IAAI;UAAA,IAAAC,kBAAA,EAAAC,qBAAA;UACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACZ,MAAM,EAAE;YACnCa,MAAM,EAAE,MAAM;YACdC,OAAO,EAAE;cACP,cAAc,EAAE;YAClB,CAAC;YACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAChB,WAAW;UAClC,CAAC,CAAC;UAEF,MAAMd,MAAM,GAAG,MAAMwB,QAAQ,CAACO,IAAI,CAAC,CAAC;UACpCrB,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEX,MAAM,CAAC;;UAElC;UACA,MAAMgC,OAAO,GAAG,EAAAV,kBAAA,GAAAtB,MAAM,CAACiC,SAAS,CAAC,CAAC,CAAC,cAAAX,kBAAA,wBAAAC,qBAAA,GAAnBD,kBAAA,CAAqBY,kBAAkB,cAAAX,qBAAA,uBAAvCA,qBAAA,CAAyCY,IAAI,KAAI,EAAE;UAEnE,IAAI;YACF,MAAMzD,KAAK,CAAC0D,IAAI,CAAC,4BAA4B,EAAE;cAAEJ;YAAQ,CAAC,CAAC;YAC3DtB,OAAO,CAACC,GAAG,CAAC,sCAAsC,CAAC;YACnDvB,eAAe,CAAC,oCAAoC,CAAC;YACrDL,QAAQ,CAACiD,OAAO,CAAC;UACnB,CAAC,CAAC,OAAOK,KAAK,EAAE;YACd3B,OAAO,CAAC2B,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;YACzDjD,eAAe,CAAC,2BAA2B,CAAC;UAC9C;QAEF,CAAC,CAAC,OAAOiD,KAAK,EAAE;UACd3B,OAAO,CAAC2B,KAAK,CAAC,oDAAoD,EAAEA,KAAK,CAAC;UAC1EjD,eAAe,CAAC,2BAA2B,CAAC;QAC9C;MACF,CAAC;MAEDS,MAAM,CAACI,aAAa,CAAChB,IAAI,CAAC;IAC5B;EACF,CAAC;EAGD,oBACEJ,OAAA;IAAKyD,SAAS,EAAC,kBAAkB;IAAAC,QAAA,GAC9BlD,YAAY,gBACXR,OAAA;MAAKyD,SAAS,EAAC,eAAe;MAAAC,QAAA,eAC5B1D,OAAA;QAAK2D,GAAG,EAAEnD,YAAa;QAACoD,GAAG,EAAC;MAAuB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnD,CAAC,gBAENhE,OAAA;MAAKyD,SAAS,EAAC,oBAAoB;MAAAC,QAAA,gBACjC1D,OAAA;QAAA0D,QAAA,EAAI;MAAmB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC5BhE,OAAA;QAAQyD,SAAS,EAAC,KAAK;QAACQ,OAAO,EAAE5C,WAAY;QAAAqC,QAAA,eAC3C1D,OAAA;UAAKyD,SAAS,EAAC,OAAO;UAACE,GAAG,EAAE7D,WAAY;UAAC8D,GAAG,EAAC;QAAe;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CACN,eAEDhE,OAAA;MAAOsC,IAAI,EAAC,MAAM;MAAC4B,MAAM,EAAC,kBAAkB;MAACC,QAAQ,EAAExD,gBAAiB;MAAC8C,SAAS,EAAC,YAAY;MAACW,GAAG,EAAE1D;IAAgB;MAAAmD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAExHhE,OAAA;MAAKyD,SAAS,EAAC,oBAAoB;MAAAC,QAAA,eACjC1D,OAAA;QAAQyD,SAAS,EAAC,KAAK;QAACQ,OAAO,EAAExC,YAAa;QAAAiC,QAAA,EAC3CtD,IAAI,GAAG,QAAQ,GAAG;MAAQ;QAAAyD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,EAEL1D,YAAY,iBAAIN,OAAA;MAAA0D,QAAA,EAAIpD;IAAY;MAAAuD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnC,CAAC;AAEV,CAAC;AAAC7D,EAAA,CAlHIF,UAAU;AAAAoE,EAAA,GAAVpE,UAAU;AAqHhB,eAAeA,UAAU;AAAC,IAAAoE,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}