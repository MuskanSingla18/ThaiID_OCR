{"ast":null,"code":"var _jsxFileName = \"/Users/muskansingla/Desktop/Qoala/client/src/components/RecordTable.js\",\n  _s = $RefreshSig$();\n// client/src/components/RecordsTable.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './RecordTable.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RecordsTable = () => {\n  _s();\n  const [records, setRecords] = useState([]);\n  const [editMode, setEditMode] = useState(false);\n  const [editedData, setEditedData] = useState({});\n  const [editedId, setEditedId] = useState(null);\n\n  // Fetch records from the server on component mount\n  useEffect(() => {\n    const fetchRecords = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/data');\n        const activeRecords = response.data.filter(record => record.status === \"true\");\n        setRecords(activeRecords);\n      } catch (error) {\n        console.error('Error fetching records:', error);\n      }\n    };\n    fetchRecords();\n  }, []); // Empty dependency array to run this effect only once\n\n  // Set up Server-Sent Events (SSE)\n  useEffect(() => {\n    const eventSource = new EventSource('http://localhost:5000/events');\n    eventSource.onmessage = event => {\n      const newRecord = JSON.parse(event.data);\n      setRecords(prevRecords => [newRecord, ...prevRecords]);\n    };\n    eventSource.onerror = error => {\n      console.error('SSE error:', error);\n      eventSource.close();\n    };\n    return () => {\n      eventSource.close();\n    };\n  }, []);\n  const handleDelete = async id => {\n    try {\n      await axios.delete(`http://localhost:5000/data/${id}`);\n      // Manually remove the deleted record from the state to update UI\n      setRecords(prevRecords => prevRecords.filter(record => record._id !== id));\n    } catch (error) {\n      console.error('Error deleting record:', error);\n    }\n  };\n  const handleEdit = id => {\n    // Set edit mode to true and initialize edited data\n    setEditMode(true);\n    setEditedId(id);\n    const recordToEdit = records.find(record => record._id === id);\n    setEditedData({\n      identification_number: recordToEdit.identification_number,\n      name: recordToEdit.name,\n      last_name: recordToEdit.last_name,\n      date_of_birth: recordToEdit.date_of_birth,\n      date_of_issue: recordToEdit.date_of_issue,\n      date_of_expiry: recordToEdit.date_of_expiry\n    });\n  };\n\n  // Handle apply edit\n  const handleApplyEdit = async () => {\n    try {\n      const updatedFields = {\n        ...editedData\n      }; // Copy editedData to avoid state mutation\n      const response = await axios.put(`http://localhost:5000/data/${editedId}`, updatedFields);\n\n      // Update the state with the updated record\n      setRecords(prevRecords => prevRecords.map(record => record._id === editedId ? {\n        ...record,\n        ...response.data\n      } : record));\n\n      // Reset edit mode and clear edited data\n      setEditMode(false);\n      setEditedData({});\n    } catch (error) {\n      console.error('Error updating record:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Records Table\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"records-list\",\n      children: records.map((record, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"record-box\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"record-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [\"Record \", index + 1, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n            children: ['{', /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this), '    identification_number: ' + record.identification_number + ',', /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 15\n            }, this), '    name: ' + record.name + ',', /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 15\n            }, this), '    last_name: ' + record.last_name + ',', /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 15\n            }, this), '    date_of_birth: ' + record.date_of_birth + ',', /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 15\n            }, this), '    date_of_issue: ' + record.date_of_issue + ',', /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 15\n            }, this), '    date_of_expiry: ' + record.date_of_expiry + ',', /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 15\n            }, this), '    status: ' + record.status, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 15\n            }, this), '}']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), editMode && editedId === record._id && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"edit-form\",\n            children: [Object.keys(editedData).map(key => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: [key, \":\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: editedData[key],\n                onChange: e => setEditedData(prevData => ({\n                  ...prevData,\n                  [key]: e.target.value\n                }))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 23\n              }, this)]\n            }, key, true, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 21\n            }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"apply-button\",\n              onClick: handleApplyEdit,\n              children: \"Apply\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"edit-button\",\n            onClick: () => handleEdit(record._id),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"delete-button\",\n            onClick: () => handleDelete(record._id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this)\n      }, record._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n_s(RecordsTable, \"TsNx1fLg4MWOzKFWqETF+1loZvo=\");\n_c = RecordsTable;\nexport default RecordsTable;\nvar _c;\n$RefreshReg$(_c, \"RecordsTable\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","RecordsTable","_s","records","setRecords","editMode","setEditMode","editedData","setEditedData","editedId","setEditedId","fetchRecords","response","get","activeRecords","data","filter","record","status","error","console","eventSource","EventSource","onmessage","event","newRecord","JSON","parse","prevRecords","onerror","close","handleDelete","id","delete","_id","handleEdit","recordToEdit","find","identification_number","name","last_name","date_of_birth","date_of_issue","date_of_expiry","handleApplyEdit","updatedFields","put","map","children","fileName","_jsxFileName","lineNumber","columnNumber","className","index","Object","keys","key","type","value","onChange","e","prevData","target","onClick","_c","$RefreshReg$"],"sources":["/Users/muskansingla/Desktop/Qoala/client/src/components/RecordTable.js"],"sourcesContent":["// client/src/components/RecordsTable.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './RecordTable.css'; \n\nconst RecordsTable = () => {\n    const [records, setRecords] = useState([]);\n    const [editMode, setEditMode] = useState(false);\n  const [editedData, setEditedData] = useState({});\n  const [editedId, setEditedId] = useState(null);\n\n    // Fetch records from the server on component mount\n    useEffect(() => {\n      const fetchRecords = async () => {\n        try {\n          const response = await axios.get('http://localhost:5000/data');\n\n          const activeRecords = response.data.filter((record) => record.status === \"true\");\n            setRecords(activeRecords);\n        } catch (error) {\n          console.error('Error fetching records:', error);\n        }\n      };\n  \n      fetchRecords();\n    }, []); // Empty dependency array to run this effect only once\n  \n    // Set up Server-Sent Events (SSE)\n    useEffect(() => {\n      const eventSource = new EventSource('http://localhost:5000/events');\n  \n      eventSource.onmessage = (event) => {\n        const newRecord = JSON.parse(event.data);\n        setRecords((prevRecords) => [newRecord, ...prevRecords]);\n      };\n  \n      eventSource.onerror = (error) => {\n        console.error('SSE error:', error);\n        eventSource.close();\n      };\n  \n      return () => {\n        eventSource.close();\n      };\n    }, []);\n  \n    const handleDelete = async (id) => {\n        try {\n            await axios.delete(`http://localhost:5000/data/${id}`);\n            // Manually remove the deleted record from the state to update UI\n            setRecords((prevRecords) => prevRecords.filter((record) => record._id !== id));\n        } catch (error) {\n          console.error('Error deleting record:', error);\n        }\n      };\n\n      const handleEdit = (id) => {\n        // Set edit mode to true and initialize edited data\n        setEditMode(true);\n        setEditedId(id);\n        const recordToEdit = records.find((record) => record._id === id);\n        setEditedData({\n            identification_number: recordToEdit.identification_number,\n            name: recordToEdit.name,\n            last_name: recordToEdit.last_name,\n            date_of_birth: recordToEdit.date_of_birth,\n            date_of_issue: recordToEdit.date_of_issue,\n            date_of_expiry: recordToEdit.date_of_expiry,\n    });\n      };\n    \n      // Handle apply edit\n      const handleApplyEdit = async () => {\n        try {\n            const updatedFields = { ...editedData }; // Copy editedData to avoid state mutation\n            const response = await axios.put(`http://localhost:5000/data/${editedId}`, updatedFields);\n      \n            // Update the state with the updated record\n            setRecords((prevRecords) =>\n              prevRecords.map((record) =>\n                record._id === editedId ? { ...record, ...response.data } : record\n              )\n            );\n      \n            // Reset edit mode and clear edited data\n            setEditMode(false);\n            setEditedData({});\n          } catch (error) {\n            console.error('Error updating record:', error);\n          }\n      };\n\n  return (\n    <div>\n      <h2>Records Table</h2>\n      <ul className=\"records-list\">\n        {records.map((record, index) => (\n          <li key={record._id} className=\"record-box\">\n            <div className=\"record-content\">\n            <strong>Record {index + 1}:</strong>\n            <pre>\n              {'{'}\n              <br />\n              {'    identification_number: ' + record.identification_number + ','}\n              <br />\n              <br />\n              {'    name: ' + record.name + ','}\n              <br />\n              <br />\n              {'    last_name: ' + record.last_name + ','}\n              <br />\n              <br />\n              {'    date_of_birth: ' + record.date_of_birth + ','}\n              <br />\n              <br />\n              {'    date_of_issue: ' + record.date_of_issue + ','}\n              <br />\n              <br />\n              {'    date_of_expiry: ' + record.date_of_expiry + ','}\n              <br />\n              <br />\n              {'    status: ' + record.status}\n              <br />\n              {'}'}\n            </pre>\n\n            {editMode && editedId === record._id && (\n                <div className=\"edit-form\">\n                  {/* Render form inputs based on keys in the editedData */}\n                  {Object.keys(editedData).map((key) => (\n                    <div key={key}>\n                      <label>{key}:</label>\n                      <input\n                        type=\"text\"\n                        value={editedData[key]}\n                        onChange={(e) => setEditedData((prevData) => ({ ...prevData, [key]: e.target.value }))}\n                      />\n                    </div>\n                  ))}\n                  <button className=\"apply-button\" onClick={handleApplyEdit}>\n                    Apply\n                  </button>\n                </div>\n              )}\n\n            <button className=\"edit-button\" onClick={() => handleEdit(record._id)}>\n                Edit\n              </button>\n            <button className=\"delete-button\" onClick={() => handleDelete(record._id)}>Delete</button>\n            </div>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default RecordsTable;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}