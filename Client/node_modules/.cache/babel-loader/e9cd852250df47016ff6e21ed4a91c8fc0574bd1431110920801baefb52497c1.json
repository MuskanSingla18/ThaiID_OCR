{"ast":null,"code":"var _jsxFileName = \"/Users/muskansingla/Desktop/Qoala/client/src/components/RecordTable.js\",\n  _s = $RefreshSig$();\n// client/src/components/RecordsTable.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './RecordTable.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RecordsTable = () => {\n  _s();\n  const [records, setRecords] = useState([]);\n\n  // Fetch records from the server on component mount\n  useEffect(() => {\n    const fetchRecords = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/data');\n        setRecords(response.data);\n      } catch (error) {\n        console.error('Error fetching records:', error);\n      }\n    };\n    fetchRecords();\n  }, []); // Empty dependency array to run this effect only once\n\n  // Set up Server-Sent Events (SSE)\n  useEffect(() => {\n    const eventSource = new EventSource('http://localhost:5000/events');\n    eventSource.onmessage = event => {\n      const newRecord = JSON.parse(event.data);\n      setRecords(prevRecords => [newRecord, ...prevRecords]);\n    };\n    eventSource.onerror = error => {\n      console.error('SSE error:', error);\n      eventSource.close();\n    };\n    return () => {\n      eventSource.close();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Records Table\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"records-list\",\n      children: records.map((record, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"record-box\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"record-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [\"Record \", index + 1, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n            children: ['{', /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 15\n            }, this), '    identification_number: ' + record.identification_number + ',', /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, this), '  name: ' + record.name + ',', /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this), '  last_name: ' + record.last_name + ',', /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this), '  date_of_birth: ' + record.date_of_birth + ',', /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this), '  date_of_issue: ' + record.date_of_issue + ',', /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this), '  date_of_expiry: ' + record.date_of_expiry + ',', /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, this), '  status: ' + record.status, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this), '}']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)\n      }, record._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(RecordsTable, \"LpshLvHg5NC5hhMuRaCCMMjaNIk=\");\n_c = RecordsTable;\nexport default RecordsTable;\nvar _c;\n$RefreshReg$(_c, \"RecordsTable\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","RecordsTable","_s","records","setRecords","fetchRecords","response","get","data","error","console","eventSource","EventSource","onmessage","event","newRecord","JSON","parse","prevRecords","onerror","close","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","record","index","identification_number","name","last_name","date_of_birth","date_of_issue","date_of_expiry","status","_id","_c","$RefreshReg$"],"sources":["/Users/muskansingla/Desktop/Qoala/client/src/components/RecordTable.js"],"sourcesContent":["// client/src/components/RecordsTable.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './RecordTable.css'; \n\nconst RecordsTable = () => {\n    const [records, setRecords] = useState([]);\n\n    // Fetch records from the server on component mount\n    useEffect(() => {\n      const fetchRecords = async () => {\n        try {\n          const response = await axios.get('http://localhost:5000/data');\n          setRecords(response.data);\n        } catch (error) {\n          console.error('Error fetching records:', error);\n        }\n      };\n  \n      fetchRecords();\n    }, []); // Empty dependency array to run this effect only once\n  \n    // Set up Server-Sent Events (SSE)\n    useEffect(() => {\n      const eventSource = new EventSource('http://localhost:5000/events');\n  \n      eventSource.onmessage = (event) => {\n        const newRecord = JSON.parse(event.data);\n        setRecords((prevRecords) => [newRecord, ...prevRecords]);\n      };\n  \n      eventSource.onerror = (error) => {\n        console.error('SSE error:', error);\n        eventSource.close();\n      };\n  \n      return () => {\n        eventSource.close();\n      };\n    }, []);\n  \n\n  return (\n    <div>\n      <h2>Records Table</h2>\n      <ul className=\"records-list\">\n        {records.map((record, index) => (\n          <li key={record._id} className=\"record-box\">\n            <div className=\"record-content\">\n            <strong>Record {index + 1}:</strong>\n            <pre>\n              {'{'}\n              <br />\n              {'    identification_number: ' + record.identification_number + ','}\n              <br />\n              {'  name: ' + record.name + ','}\n              <br />\n              {'  last_name: ' + record.last_name + ','}\n              <br />\n              {'  date_of_birth: ' + record.date_of_birth + ','}\n              <br />\n              {'  date_of_issue: ' + record.date_of_issue + ','}\n              <br />\n              {'  date_of_expiry: ' + record.date_of_expiry + ','}\n              <br />\n              {'  status: ' + record.status}\n              <br />\n              {'}'}\n            </pre>\n            <button>Delete</button>\n            </div>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default RecordsTable;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}