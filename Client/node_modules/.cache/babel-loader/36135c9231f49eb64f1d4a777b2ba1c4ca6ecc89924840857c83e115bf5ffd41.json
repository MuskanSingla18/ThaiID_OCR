{"ast":null,"code":"var _jsxFileName = \"/Users/muskansingla/Desktop/Qoala/client/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React, { useState } from 'react';\nimport FileUpload from './components/FileUpload';\nimport QueryResults from './components/QueryResults';\nimport UploadedFile from './components/UploadedFile';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [ocrResults, setOCRResults] = useState([]);\n  const [uploadedFile, setUploadedFile] = useState(null);\n  const handleUpload = async file => {\n    setUploadedFile(file);\n    const formData = new FormData();\n    formData.append('file', file);\n    try {\n      const response = await fetch('http://localhost:3000/upload', {\n        method: 'POST',\n        body: formData\n      });\n      const result = await response.text();\n      console.log('Response:', result);\n      setOCRResults([...ocrResults, result]);\n    } catch (error) {\n      console.error('Error uploading file:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"OCR App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FileUpload, {\n      onUpload: handleUpload\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(UploadedFile, {\n      file: uploadedFile\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 1\n    }, this), ocrResults.length > 0 && /*#__PURE__*/_jsxDEV(QueryResults, {\n      results: ocrResults\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 27\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"RSxd5N6QrUWHN7wslzmvBYFVXxc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","FileUpload","QueryResults","UploadedFile","jsxDEV","_jsxDEV","App","_s","ocrResults","setOCRResults","uploadedFile","setUploadedFile","handleUpload","file","formData","FormData","append","response","fetch","method","body","result","text","console","log","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onUpload","length","results","_c","$RefreshReg$"],"sources":["/Users/muskansingla/Desktop/Qoala/client/src/App.js"],"sourcesContent":["import './App.css';\nimport React, { useState } from 'react';\nimport FileUpload from './components/FileUpload';\nimport QueryResults from './components/QueryResults';\nimport UploadedFile from './components/UploadedFile';\n\nfunction App() {\n\n  const [ocrResults, setOCRResults] = useState([]);\n  const [uploadedFile, setUploadedFile] = useState(null);\n\n  const handleUpload = async (file) => {\n    setUploadedFile(file);\n\n    const formData = new FormData();\n    formData.append('file', file);\n\n    try {\n      const response = await fetch('http://localhost:3000/upload', {\n        method: 'POST',\n        body: formData,\n      });\n\n      const result = await response.text();\n      console.log('Response:', result);\n      \n      setOCRResults([...ocrResults, result]);\n    } catch (error) {\n      console.error('Error uploading file:', error);\n    }\n  };\n\n\n  return (\n    <div className=\"App\">\n      <h1>OCR App</h1>\n\n<FileUpload onUpload={handleUpload} />\n<UploadedFile file={uploadedFile} />\n\n{ocrResults.length > 0 && <QueryResults results={ocrResults} />}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,YAAY,MAAM,2BAA2B;AACpD,OAAOC,YAAY,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACU,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAEtD,MAAMY,YAAY,GAAG,MAAOC,IAAI,IAAK;IACnCF,eAAe,CAACE,IAAI,CAAC;IAErB,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEH,IAAI,CAAC;IAE7B,IAAI;MACF,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAE;QAC3DC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEN;MACR,CAAC,CAAC;MAEF,MAAMO,MAAM,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MACpCC,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEH,MAAM,CAAC;MAEhCZ,aAAa,CAAC,CAAC,GAAGD,UAAU,EAAEa,MAAM,CAAC,CAAC;IACxC,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C;EACF,CAAC;EAGD,oBACEpB,OAAA;IAAKqB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBtB,OAAA;MAAAsB,QAAA,EAAI;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEtB1B,OAAA,CAACJ,UAAU;MAAC+B,QAAQ,EAAEpB;IAAa;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACtC1B,OAAA,CAACF,YAAY;MAACU,IAAI,EAAEH;IAAa;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAEnCvB,UAAU,CAACyB,MAAM,GAAG,CAAC,iBAAI5B,OAAA,CAACH,YAAY;MAACgC,OAAO,EAAE1B;IAAW;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtD,CAAC;AAEV;AAACxB,EAAA,CArCQD,GAAG;AAAA6B,EAAA,GAAH7B,GAAG;AAuCZ,eAAeA,GAAG;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}