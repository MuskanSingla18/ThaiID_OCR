{"ast":null,"code":"var _jsxFileName = \"/Users/muskansingla/Desktop/Qoala/client/src/components/UploadedFile.js\";\n// client/src/components/UploadedFile.js\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadedFile = ({\n  ocr\n}) => {\n  // if (!ocr) {\n  //   return null;\n  // }\n\n  // const { originalname, size, mimetype, ocrText } = file;\n  console.log(ocr);\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_c = UploadedFile;\nexport default UploadedFile;\nvar _c;\n$RefreshReg$(_c, \"UploadedFile\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","UploadedFile","ocr","console","log","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/muskansingla/Desktop/Qoala/client/src/components/UploadedFile.js"],"sourcesContent":["// client/src/components/UploadedFile.js\nimport React from 'react';\n\nconst UploadedFile = ({ ocr }) => {\n  // if (!ocr) {\n  //   return null;\n  // }\n\n  // const { originalname, size, mimetype, ocrText } = file;\n  console.log(ocr)\n\n  return (\n    <div>\n      {/* <h2>Uploaded File</h2>\n      <p>File Name: {originalname}</p>\n      <p>File Size: {size} bytes</p>\n      <p>File Type: {mimetype}</p>\n      <h2>OCR Result</h2>\n      <p>{ocrText}</p> */}\n    </div>\n  );\n};\n\nexport default UploadedFile;\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAI,CAAC,KAAK;EAChC;EACA;EACA;;EAEA;EACAC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;EAEhB,oBACEF,OAAA;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAOK,CAAC;AAEV,CAAC;AAACC,EAAA,GAlBIR,YAAY;AAoBlB,eAAeA,YAAY;AAAC,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}